{"version":3,"sources":["components/header.js","components/slider.js","components/measures.js","components/controls.js","audio/click1.wav","audio/click2.wav","App.js","index.js"],"names":["Header","useStyles","makeStyles","root","width","margin","padding","borderColor","input","fontSize","color","background","slyde","InputSlider","bpm","setBPM","classes","className","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","value","onChange","event","newValue","aria-labelledby","min","max","Input","target","Number","onBlur","inputProps","step","type","theme","formControl","minWidth","backgroundColor","selectEmpty","marginTop","label","borderRadius","PerMeasure","beatsPerMeasure","setBeatsPerMeasure","FormControl","variant","InputLabel","Select","labelId","MenuItem","textAlign","btn","Controls","isPlaying","setIsPlaying","Button","onClick","endIcon","App","useState","setValue","colorStyle","useColorChange","higher","lower","duration","useEffect","metronome","clicks","Audio","click1","upbeat","click2","beat","setInterval","play","clearInterval","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e004562.chunk.js","sourcesContent":["export default function Header() {\r\n  return (\r\n    <header>\r\n      <h1>Metronome</h1>\r\n      <p>Timing is everything...</p>\r\n    </header>\r\n  )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 800,\r\n    margin: 'auto',\r\n    padding: '5rem',\r\n    borderColor: 'red',\r\n  },\r\n  input: {\r\n    width: 100,\r\n    fontSize: '2rem',\r\n    padding: '0.5rem',\r\n    color: 'var(--black)',\r\n    background: 'var(--grey)'\r\n  },\r\n  slyde: {\r\n    color: 'var(--light-red)'\r\n  }\r\n});\r\n\r\n\r\nexport default function InputSlider({ bpm, setBPM }) {\r\n  const classes = useStyles();\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setBPM(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setBPM(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (bpm < 40) {\r\n      setBPM(40);\r\n    } else if (bpm > 180) {\r\n      setBPM(180);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Beats Per Minute (BPM)\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Slider\r\n            className={classes.slyde}\r\n            value={typeof bpm === 'number' ? bpm : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n            min={40}\r\n            max={180}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={bpm}\r\n            color=\"secondary\"\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 40,\r\n              max: 180,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 250,\r\n    backgroundColor: 'var(--grey)',\r\n    fontSize: '2.5rem',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  label: {\r\n    color: 'black',\r\n    padding: '0.1rem 1rem',\r\n    borderRadius: '1rem',\r\n    backgroundColor: 'var(--light-red)'\r\n  }\r\n}));\r\n\r\nexport default function PerMeasure({ beatsPerMeasure, setBeatsPerMeasure }) {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setBeatsPerMeasure(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel className={classes.label} color=\"secondary\" id=\"bpm-label\">Beats Per Measure</InputLabel>\r\n        <Select\r\n          labelId=\"bpm-label\"\r\n          value={beatsPerMeasure}\r\n          onChange={handleChange}\r\n          color=\"secondary\"\r\n        >\r\n          <MenuItem value={4}>4</MenuItem>\r\n          <MenuItem value={3}>3</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PerMeasure from './measures';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n  },\r\n  btn: {\r\n    fontSize: '1.2rem',\r\n    backgroundColor: 'var(--light-red)',\r\n    margin: '0 1rem',\r\n    '&:hover': {\r\n      backgroundColor: 'var(--dark-red)',\r\n      color: 'black'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function Controls({ isPlaying, setIsPlaying, beatsPerMeasure, setBeatsPerMeasure }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <PerMeasure \r\n        beatsPerMeasure={beatsPerMeasure} \r\n        setBeatsPerMeasure={setBeatsPerMeasure}        \r\n      />\r\n      {isPlaying\r\n        ? <Button\r\n            className={classes.btn}\r\n            onClick={() => setIsPlaying(false)}\r\n            variant=\"outlined\"\r\n            endIcon={<StopIcon />}\r\n          >\r\n            Stop\r\n          </Button>      \r\n        : <Button\r\n            className={classes.btn}\r\n            onClick={() => setIsPlaying(true)}\r\n            variant=\"outlined\"\r\n            endIcon={<PlayArrowIcon />}\r\n          >\r\n            Start\r\n          </Button>\r\n\r\n      }\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/click1.07cda4b8.wav\";","export default __webpack_public_path__ + \"static/media/click2.5b5930c4.wav\";","import { useEffect, useState } from 'react';\nimport useColorChange from 'use-color-change';\nimport Header from './components/header';\nimport InputSlider from './components/slider';\nimport Controls from './components/controls';\nimport './App.css';\nimport click1 from './audio/click1.wav';\nimport click2 from './audio/click2.wav';\n\nfunction App() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [bpm, setBPM] = useState(60);\n  const [beatsPerMeasure, setBeatsPerMeasure] = useState(4);\n  const [value, setValue] = useState(1);\n\n  const colorStyle = useColorChange(value, {\n    higher: \"#c3073f\",\n    lower: \"#c3073f\",\n    duration: 1000\n  });\n  \n  useEffect(() => {\n    const clicks = new Audio(click1);\n    const upbeat = new Audio(click2);\n    let metronome;\n    let beat = 1;\n    \n    const playTempo = () => {\n      setValue(beat);\n      if(beat % beatsPerMeasure === 0) {\n        upbeat.play();\n        beat = 1;\n      } else {\n        clicks.play()\n        beat++;\n      }\n    }\n\n    if (isPlaying) {\n      metronome = setInterval( playTempo, (60 / bpm) * 1000);\n    };\n\n    return () => clearInterval(metronome);\n  },[isPlaying, bpm, beatsPerMeasure]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"visual\" style={colorStyle}>{value}</div>\n      <Header />\n      <InputSlider \n        isPlaying={isPlaying} \n        bpm={bpm}\n        setBPM={setBPM}\n      />\n      <Controls \n        isPlaying={isPlaying} \n        setIsPlaying={setIsPlaying} \n        beatsPerMeasure={beatsPerMeasure} \n        setBeatsPerMeasure={setBeatsPerMeasure}\n      />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}